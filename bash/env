#!/bin/bash -e

# values used by other sripts and applications
uname=$(uname -a)
strLinux="Linux"
strLinuxFranzi="Linux franzi"
strLinuxMartin="Linux bost-martin"
strLinuxMartinJV="Linux martin-jv"
strLinuxBambi="Linux bambi-small"
strLinuxNew64="Linux bost-new-64"

#echo uname: $uname
# the system variable strMinGw32_155 is not visible under WinGit
strMinGw32_155="MINGW32_NT-6.1 LE-C-155"

export isLinux=$(expr match "$uname" "$strLinux")
# TODO clean definition of isLinux_64
export isLinux_64=0
export isLinuxNew64=$(expr match "$uname" "$strLinuxNew64")
export isLinuxFranzi=$(expr match "$uname" "$strLinuxFranzi")
export isLinuxMartinJV=$(expr match "$uname" "$strLinuxMartinJV")
export isLinuxMartin=$(expr match "$uname" "$strLinuxMartin")
export isLinuxBambi=$(expr match "$uname" "$strLinuxBambi")
export isMinGw32_app1=$(expr match "$uname" "$strMinGw32_app1")
export isCygwin_155=$(expr match "$uname" "$strCygwin_155")
export isMinGw32_155=$(expr match "$uname" "$strMinGw32_155")

# TODO create a hashmap with machines

#echo isLinux: $isLinux
#echo isLinux_64: $isLinux_64
#echo isLinuxNew64: $isLinuxNew64
#echo isLinuxFranzi: $isLinuxFranzi
#echo isLinuxMartin: $isLinuxMartin
#echo isLinuxMartinJV: $isLinuxMartinJV
#echo isLinuxBambi: $isLinuxBambi
#echo isMinGw32_app1: $isMinGw32_app1
#echo isCygwin_155: $isCygwin_155
#echo isMinGw32_155: $isMinGw32_155

if [ "$isLinux" -gt 0 ]; then
    :
    #echo "### Display no message in the console if doing scp"
    export ALTERNATE_EDITOR=emacs;
    #EDITOR=gvim # use it with <C-x>e
    #export EDITOR=emacsclient
    export EDITOR=$HOME/bin/edit-emacsclient.sh
    export VISUAL=emacsclient

    bits=$(getconf LONG_BIT)
    export isLinux_64=$(expr match "$bits" 64)

    dev=$HOME/dev
    APPENG_PYTHON_HOME=$HOME/gae/appeng-python-1.8

    if [ "$isLinux_64" -gt 0 ] || [ "$isLinuxFranzi" -eq 0 ] || [ "$isLinuxMartin" -eq 0 ]; then
        :
        PATH=$PATH:$HOME/bin:$APPENG_PYTHON_HOME:$HOME/.cabal/bin
    else
        :
        # TODO it seems like MAVEN_HOME is not needed
        #MAVEN_HOME=$HOME/apache-maven-3.0.4
        AAPPENG_HOME=$APPENG_JAVA_HOME
        APPENG_JAVA_HOME=$HOME/gae/appeng-java-sdk-1.7.1
        APPENG_PYTHON_HOME=$HOME/gae/appeng-python-1.7.2
        CLASSPATH=$dev/appengine-magic/appengine-magic-0.5.0.jar:$CLASSPATH
        # TODO try to use OpenJDK instead of Oracle JDK
        JDK_16_HOME=$HOME/java/jdk1.6.0_33
        JAVA_HOME=$HOME/java/jdk1.7.0_45
        # I need too have $PATH at the end because I want to override the pre-preinstalled java
        PATH=$JAVA_HOME/bin:$PATH:$HOME/bin:$APPENG_PYTHON_HOME
    fi

    export CLOJURESCRIPT=$dev/clojurescript
    PATH=$PATH:$CLOJURESCRIPT/bin

    # remaping the Esc key to Capslock (I don't use it that much)
    xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'

elif [ "$isCygwin_155" -gt 0 ]; then
    :
    echo "### isCygwin_155: $isCygwin_155 => Loading $strCygwin_155"
    base=/cygdrive
    dev=$base/c/cygwin/home/$USERNAME/dev
    tmp=$base/c/cygwin/home/$USERNAME/tmp
    winapp=$base/c/winapp
    winappX86=$base/c/winapp-x86

    # export DISPLAY=":0" is needed for gvim in Cygwin Terminal
    export DISPLAY=":0"
elif [ "$isMinGw32_155" -gt 0 ]; then
    :
    echo "### isMinGw32_155: $isMinGw32_155 => Loading $strMinGw32_155"
    dev=$base/c/cygwin/home/$USERNAME/dev
    winapp=$base/c/winapp
elif [ "$isMinGw32_app1" -gt 0 ]; then
    :
    echo "### isMinGw32_app1: $isMinGw32_app1 => Loading $strMinGw32_app1 aliases"
    dev=$base/d/users/$USERNAME/dev
    winapp=$base/d/users/$USERNAME/winapp
else
    :
    echo "ERROR: No environment detected"
fi

if [ "$isLinux" -eq 0 ]; then
    :
    echo "### isLinux: $isLinux => Loading non-$strLinux aliases"

    if [ -d "${winapp}" ]; then
        :
        export winapp
    else
        :
        echo "ERROR: Undefined variable winapp: ${winapp}"
        #exit
    fi

    export qDrive=$base/q
    export rosv=$qDrive/transfer/rosv
    export deployments_base=$rosv/mbs/deployments
    export deployments_mce=$deployments_base/mce
    export fDefvars=$deployments_base/defvars.sh
    #echo "fDefvars=$fDefvars"
    if [ -f "${fDefvars}" ]; then
        :
        source "${fDefvars}"
        #echo "File loaded: ${fDefvars}"
    else
        :
        echo "ERROR: File not found: ${fDefvars}"
        exit
    fi

    export deployments_full=$deployments_mce/$rlsDate"_"$rlsVer

    export http_proxy=http://$PROXY
    export https_proxy=https://$PROXY
    export ftp_proxy=ftp://$PROXY

    #echo "CVSROOT="$CVSROOT"   # this is the active CVSROOT"

    echo export TERM=msys
    echo export http_proxy=$http_proxy
    echo export https_proxy=$https_proxy
    echo export ftp_proxy=$ftp_proxy
    echo export CVSROOT=$CVSROOT"        # active Jacarta CVSROOT"
    echo export CVSROOT=$CVSROOT_ALTERNATIVE"   # alternative Jacarta CVSROOT"
    echo export CVSROOT=$CVSROOT_MBS"    # CVSROOT for MBS"
    echo ''

#else
#    :
#    echo "Linux aliases already loaded"
fi

if [ "$isCygwin_155" -gt 0 ] || [ "$isMinGw32_155" -gt 0 ] ; then
    JDK_16_HOME=$winapp/Java/1.6.0_41
    JAVA_HOME=$winapp/Java/jdk1.7.0_45
    APPENG_JAVA_HOME=$winappX86/Google/appeng-java-sdk-1.7.1
    APPENG_PYTHON_HOME=$winappX86/Google/google_appengine

    APPENGINE_HOME=/cygdrive/c/winapp-x86/Google/appeng-java-sdk-1.7.1

    PATH=$PATH:$HOME/apache-cxf-2.7.6/bin
    PATH=$PATH:$APPENG_PYTHON_HOME
fi

if [ "$isLinux_64" -eq 0 ]; then
    export JDK_16_HOME
fi

export dev
export PATH
if [ "$isLinux" -eq 0 ]; then
    export JAVA_HOME
fi

if [ "$isLinuxMartin" -eq 0 ]; then
    export APPENGINE_HOME
fi

if [ "$isLinux" -gt 0 ] || [ "$isCygwin_155" -gt 0 ] || [ "$isMinGw32_155" -gt 0 ] ; then
    clojureJarFile=$dev/clojure/clojure-1.6.0.jar
    export clojureJarFile
    export APPENG_PYTHON_HOME
    if [ "$isLinuxMartin" -eq 0 ]; then
        export APPENG_JAVA_HOME
    fi
fi

if [ "$isLinuxFranzi" -eq 0 ] && [ "$isLinuxMartinJV" -eq 0 ] && [ "$isLinuxNew64" -eq 0 ]; then
    dnameOld=$HOME/dev/dotfiles/vim
    dnameNew=$HOME/dev/dotfiles/.vim
    if [ ! -d "$dnameNew" ]; then
        echo mv $dnameOld $dnameNew
             mv $dnameOld $dnameNew
        echo rm $HOME/.vim
             rm $HOME/.vim
        echo ln -s $HOME/dev/dotfiles/.vim $HOME/.vim
             ln -s $HOME/dev/dotfiles/.vim $HOME/.vim
    else
        echo "WARN: $dnameOld renamed to $dnameNew already."
    fi

    fnameOld=$HOME/dev/dotfiles/vimrc
    fnameNew=$HOME/dev/dotfiles/.vimrc
    if [ ! -f "$dnameNew" ]; then
        echo mv $fnameOld $fnameNew
             mv $fnameOld $fnameNew
        echo rm $HOME/.vimrc
             rm $HOME/.vimrc
        echo ln -s $HOME/dev/dotfiles/.vimrc $HOME/.vimrc
             ln -s $HOME/dev/dotfiles/.vimrc $HOME/.vimrc
    else
        echo "WARN: $fnameOld renamed to $fnameNew already."
    fi

    fnameOld=$HOME/dev/dotfiles/bashrc
    fnameNew=$HOME/dev/dotfiles/.bashrc
    if [ ! -f "$dnameNew" ]; then
        echo mv $fnameOld $fnameNew
             mv $fnameOld $fnameNew
        echo rm $HOME/.bashrc
             rm $HOME/.bashrc
        echo ln -s $HOME/dev/dotfiles/.bashrc $HOME/.bashrc
             ln -s $HOME/dev/dotfiles/.bashrc $HOME/.bashrc
    else
        echo "WARN: $fnameOld renamed to $fnameNew already."
    fi

    if [ -f "$fnameNew" ] && [ -d "$dnameNew" ]; then
        echo "TODO prevent this block from running on this machine:"
        echo isLinux: $isLinux
        echo isLinux_64: $isLinux_64
        echo isLinuxNew64: $isLinuxNew64
        echo isLinuxFranzi: $isLinuxFranzi
        echo isLinuxMartin: $isLinuxMartin
        echo isLinuxMartinJV: $isLinuxMartinJV
        echo isLinuxBambi: $isLinuxBambi
        echo isMinGw32_app1: $isMinGw32_app1
        echo isCygwin_155: $isCygwin_155
        echo isMinGw32_155: $isMinGw32_155
        echo "TODO create a hashmap with machines; store renaming results for a given machine in an own directory"
    fi
fi
