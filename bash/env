#!/bin/bash -e
# -e stop on error; -x debug

# setup paths and system variables

# values used by other sripts and applications
local uname=$(uname -a)
#echo uname: $uname

# TODO LE-C-155: test: uname --nodename --operating-system
local nodeName=$(uname --nodename)
#echo nodeName: $nodeName

local osName=$(uname --operating-system) # returns GNU/Linux or Cygwin
#echo osName: $osName

#local kernelName=$(uname --kernel-name)  # returns Linux
#echo kernelName: $kernelName

# strCygwin_155, strMinGw32_app1, strMinGw32_155 are defined in win sysvars
# the system variable strMinGw32_155 is not visible under WinGit
strMinGw32_155="MINGW32_NT-6.1 LE-C-155"

export isLinux=$(expr match "$osName" "GNU/Linux")
#exit
# TODO clean definition of isLinux_64
export isLinux_64=0
export isLinuxNew64=$(expr match "$nodeName" "bost-new-64")
export isLinuxFranzi=$(expr match "$nodeName" "franzi")
export isLinuxMartinJV=$(expr match "$nodeName" "martin-jv")
export isLinuxMartin=$(expr match "$nodeName" "bost-martin")
export isLinuxBambi=$(expr match "$nodeName" "bambi-small")
export isMinGw32_app1=$(expr match "$uname" "$strMinGw32_app1")
export isCygwin_155=$(expr match "$uname" "$strCygwin_155")
export isMinGw32_155=$(expr match "$uname" "$strMinGw32_155")

# TODO create a hashmap with machines

#echo isLinux: $isLinux
#echo isLinux_64: $isLinux_64
#echo isLinuxNew64: $isLinuxNew64
#echo isLinuxFranzi: $isLinuxFranzi
#echo isLinuxMartin: $isLinuxMartin
#echo isLinuxMartinJV: $isLinuxMartinJV
#echo isLinuxBambi: $isLinuxBambi
#echo isMinGw32_app1: $isMinGw32_app1
#echo isCygwin_155: $isCygwin_155
#echo isMinGw32_155: $isMinGw32_155


function add_to_path() {
    new_entry=$@
    case ":$PATH:" in
	*":$new_entry:"*) :;; # already there
	*) PATH="$new_entry:$PATH";; # or PATH="$PATH:$new_entry"
    esac
}

# TODO add_to doesn't work
# function add_to() {
#     local sysvar=$1
#     local new_entry=$1
#     case ":$sysvar:" in
# 	*":$new_entry:"*) :;; # already there
# 	*) sysvar="$var:$new_entry";;
#     esac
# }

if [ "$isLinux" -gt 0 ]; then
    :
    #echo "### Display no message in the console if doing scp"
    dev=~/dev

    export ALTERNATE_EDITOR=emacs;
    #EDITOR=gvim # use it with <C-x>e
    #export EDITOR=emacsclient
    export EDITOR=$dev/dotfiles/bash/edit.sh
    export VISUAL=emacsclient

    local bits=$(getconf LONG_BIT)
    export isLinux_64=$(($bits == 64))

    # TODO paths to Google App Engine, Oracle JDK: ~/gae/appeng-python-1.8
    export CLOJURESCRIPT=$dev/clojurescript
    add_to_path $CLOJURESCRIPT/bin
    #add_to $PATH $CLOJURESCRIPT/bin

    # remaping the Esc key to Capslock (I don't use it that much)
    xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'

elif [ "$isCygwin_155" -gt 0 ]; then
    :
    echo "### isCygwin_155: $isCygwin_155 => Loading $strCygwin_155"
    base=/cygdrive
    dev=$base/c/cygwin/home/$USERNAME/dev
    tmp=$base/c/cygwin/home/$USERNAME/tmp
    winapp=$base/c/winapp
    winappX86=$base/c/winapp-x86

    # export DISPLAY=":0" is needed for gvim in Cygwin Terminal
    export DISPLAY=":0"
elif [ "$isMinGw32_155" -gt 0 ]; then
    :
    echo "### isMinGw32_155: $isMinGw32_155 => Loading $strMinGw32_155"
    dev=$base/c/cygwin/home/$USERNAME/dev
    winapp=$base/c/winapp
elif [ "$isMinGw32_app1" -gt 0 ]; then
    :
    echo "### isMinGw32_app1: $isMinGw32_app1 => Loading $strMinGw32_app1 aliases"
    dev=$base/d/users/$USERNAME/dev
    winapp=$base/d/users/$USERNAME/winapp
else
    :
    echo "ERROR: No environment detected"
fi

if [ "$isLinux" -eq 0 ]; then
    :
    echo "### isLinux: $isLinux => Loading $osName aliases"

    if [ -d "${winapp}" ]; then
        :
        export winapp
    else
        :
        echo "ERROR: Undefined variable winapp: ${winapp}"
        #exit
    fi

    export qDrive=$base/q
    export rosv=$qDrive/transfer/rosv
    export deployments_base=$rosv/mbs/deployments
    export deployments_mce=$deployments_base/mce
    export fDefvars=$deployments_base/defvars.sh
    #echo "fDefvars=$fDefvars"
    if [ -f "${fDefvars}" ]; then
        :
        source "${fDefvars}"
        #echo "File loaded: ${fDefvars}"
    else
        :
        echo "ERROR: File not found: ${fDefvars}"
        exit
    fi

    export deployments_full=$deployments_mce/$rlsDate"_"$rlsVer

    export http_proxy=http://$PROXY
    export https_proxy=https://$PROXY
    export ftp_proxy=ftp://$PROXY

    #echo "CVSROOT="$CVSROOT"   # this is the active CVSROOT"

    echo export TERM=msys
    echo export http_proxy=$http_proxy
    echo export https_proxy=$https_proxy
    echo export ftp_proxy=$ftp_proxy
    echo export CVSROOT=$CVSROOT"        # active Jacarta CVSROOT"
    echo export CVSROOT=$CVSROOT_ALTERNATIVE"   # alternative Jacarta CVSROOT"
    echo export CVSROOT=$CVSROOT_MBS"    # CVSROOT for MBS"
    echo ''

#else
#    :
#    echo "Linux aliases already loaded"
fi

if [ "$isCygwin_155" -gt 0 ] || [ "$isMinGw32_155" -gt 0 ] ; then
    JDK_16_HOME=$winapp/Java/1.6.0_41
    JAVA_HOME=$winapp/Java/jdk1.7.0_45
fi

if [ "$isLinux" -eq 0 ]; then
    export JDK_16_HOME
    export JAVA_HOME
fi

export dev
export PATH

if [ "$isLinux" -gt 0 ] || [ "$isCygwin_155" -gt 0 ] || [ "$isMinGw32_155" -gt 0 ] ; then
    clojureJarFile=$dev/clojure/clojure-1.6.0.jar
    export clojureJarFile
fi
