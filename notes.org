* magit: set username and password

  mv filename.{txt,xml}
  mkdir -p path/dirname.0{1,2,3}
  xmllint

videa pre Michaela, Volkera a Thomasa
Volker, Thomas - drink (az po Volkerovom nastupe?)

fluidui - odporucit Michaelovi
clojure - omrknut nejake male dbazy

najst cafe s Inetom

Divadlo - Kontaktovat Daniela, email al. cez portal divadla

* App
 Achatzsuche (geocaching), BTCs, Sequence of QR Codes/ graphical elements (pyramide, cube, sphere, toroid, etc)
 Kickstart - money

* three.js
  vytvorit gulu/gule s menami funkcii
  github commit

* Jan Sieckman
  opytat sa na kniznice s tech. literaturov
  bike tour v polke septembra

* bicycle clickies - Thomas

* TODO
  pohnojit kvety
  prachy
  bitcoin backup
  ubuntu dell notebook (video Mark Shuttlework)


* pozri sa na
** vseobecne
- fractals
- google summer of code - prilis orientovane na konkretne projekty
- hierarchical data format
- sugar sync - data sync accross comps
- clojure data persistency, dbases under google app engine, datomic
- time bank
  http://www.sme.sk/c/6414188/oprav-mi-bicykel-a-ja-ta-naucim-tancovat.html

* scala

** citat
- hackernews,reddit, kickstarter

** emacs
- folding
- org-mode: Kurt Schwer - RT 3 - emacs part 3 - org-mode and babel
- install anything
- linum relative numbers
  M-1 3 C-n - scroll down 13 lines
- macros
- email: inbox too big
- magit: username, password

** napady
- dbaza "vlastnych skusenosti"
- lepsi diff format - rozdiel oproti idealnemu stavu, Abstract Syntax Tree (code must be compiled for every commit)
- zamerat sa na problemy tazke pre comp, lahke pre cloveka (arimaa, etc.)
- semafory
- Volker
   http://de.wikipedia.org/wiki/Open_Source_Ecology

- Thomas
   http://www.ted.com/talks/ayah_bdeir_building_blocks_that_blink_beep_and_teach.html

- Michael
   http://www.ted.com/talks/matt_ridley_when_ideas_have_sex.html

- 3:30
   http://www.youtube.com/watch?v=H07pbDhBgXg


- dokaz identity bez udania mena

* segra
- krstiny

* facebook
- upload fotos

* BTC
- save from bitcoin.de
- backup - papier?

* *good* keyboard

* org mode - tagging                            :org:

| col1    | col2          |
|---------+---------------|
| content | other content |
|         |               |

#+BEGIN_SRC sh :exports both
echo "Hello World" # C-c - evaluate code
#+END_SRC

#+RESULTS:
: Hello World


#+BEGIN_SRC python
return "Hello from python"
#+END_SRC

#+RESULTS:
: Hello from python

* clojure
#+BEGIN_SRC clojure
lein swank-wrap 4005 webcli.server
slime-connect
(let [x 1]
  (swank.core/break))
#+END_SRC

* semaphores
** compare 2 bitmaps
#+BEGIN_SRC
// http://stackoverflow.com/questions/10487152/comparing-two-images-for-motion-detecting-purposes
private int returnCountOfDifferentPixels(String pic1, String pic2) {
        Bitmap i1 = loadBitmap(pic1);
        Bitmap i2 = loadBitmap(pic2);

        int count=0;
        for (int y = 0; y < i1.getHeight(); ++y)
               for (int x = 0; x < i1.getWidth(); ++x)
                    if (i1.getPixel(x, y) != i2.getPixel(x, y)) {
                        count++;
                    }
        return count;
    }
#+END_SRC

** make an android app for picture comparision
** get a mobile, fix it on the window
** transmit results

* no information available
