* emacs
- folding

* check programs from google summer of code

* magit: set username and password

  mv filename.{txt,xml}
  mkdir -p path/dirname.0{1,2,3}
  xmllint

  quilt - linux kernel patch management

* pozri sa na
** vseobecne
- hierarchical data format
- fraktals
- google summer of code - prilis orientovane na konkretne projekty
- hierarchical data format
- sugar sync - data sync accross comps
** clojure data persistency, dbases under google app engine
   datomic
- time bank
  http://www.sme.sk/c/6414188/oprav-mi-bicykel-a-ja-ta-naucim-tancovat.html

* scala

** citat
- hackernews
- reddit
- kickstarter

** emacs
- folding
- org-mode: Kurt Schwer - RT 3 - emacs part 3 - org-mode and babel
- linum relative numbers
  M-1 3 C-n - scroll down 13 lines
- macros
- email: inbox too big
- magit: username, password

** napady
- dbaza "vlastnych skusenosti"
- lepsi diff format - rozdiel oproti idealnemu stavu
- problemy tazke comp, lahke cloveka (arimaa, etc.)
- semafory

* dovolenka
- bicycle

* segra
- krstiny

* facebook
- upload fotos

* BTC
- save from bitcoin.de
- backup - papier?

* *good* keyboard

* org mode - tagging                            :org:

| col1    | col2          |
|---------+---------------|
| content | other content |
|         |               |

#+BEGIN_SRC sh :exports both
echo "Hello World" # C-c - evaluate code
#+END_SRC

#+RESULTS:
: Hello World

#+BEGIN_SRC python
return "Hello from python"
#+END_SRC

#+RESULTS:
: Hello from python

* clojure
#+BEGIN_SRC clojure
lein swank-wrap 4005 webcli.server
slime-connect
(let [x 1]
  (swank.core/break))
#+END_SRC

* semaphores
** compare 2 bitmaps
#+BEGIN_SRC
// http://stackoverflow.com/questions/10487152/comparing-two-images-for-motion-detecting-purposes
private int returnCountOfDifferentPixels(String pic1, String pic2)
    {
        Bitmap i1 = loadBitmap(pic1);
        Bitmap i2 = loadBitmap(pic2);
        int count=0;

        for (int y = 0; y < i1.getHeight(); ++y)
               for (int x = 0; x < i1.getWidth(); ++x)
                    if (i1.getPixel(x, y) != i2.getPixel(x, y))
                        {
                        count++;
                        }

          return count;

    }
#+END_SRC

** make an android app for picture comparision
** get a mobile, fix it on the window
** transmit results

* no information available
