" behave mswin
behave xterm

" Initialization -------------------------------------------------------------
set nocompatible
"silent! call pathogen#infect()
call pathogen#infect()
silent! call pathogen#runtime_append_all_bundles()
"let mapleader = ","
"let mapleader = " "
set showcmd                     " display incomplete commands
set hidden                      " handle multiple buffers more efficiently
set laststatus=2                " show status line
set encoding=utf-8


" GUI only stuff -------------------------------------------------------------
if has('gui_running')
    " switch off the menu in the gui window
    "set guioptions=gt

    " horizontal scrollbar
    set guioptions+=b
endif

if has('mac')
elseif has('unix')
    set guifont=DejaVu\ Sans\ Mono\ 9
elseif has('win32')
    set guifont=Lucida_Console:h8:w5
endif
"set guifont=Monospace\ 9
"set guifont=Lucida_Console:h8:cDEFAULT
"set guifont=lucida_console:h8:w5
"set lines=64 columns=160

set cursorline          " highlight current line
"set linebreak			" TODO what is linebreak for?

"colorscheme default
"colorscheme darkblue
try
    "colorscheme evening
    "colorscheme vividchalk
    colorscheme wombat
    "colorscheme inkpot
catch
	"colorscheme slate
	colorscheme desert
endtry

set smartindent
"set autoindent

set tabstop=4
set expandtab                   " use spaces, not tabs
"set showtabline=2
set shiftwidth=4 softtabstop=4
set backspace=indent,eol,start  " backspace through everything in insert mode

" start maximized
" autocmd GUIEnter * :simalt ~x

"imap jj <Esc>
"imap :: <Esc>

" visualise a word and switch to insert mode
"map <space> viw
" visualise a word
"map <space> vw

" only for cheatsheet.html: jump to the 1st '#' character, then replace
" everything in the html tag with '# '
"map <F3> f#cit# 

" Use colours that work well on a dark background (Console is usually black)
"set background=dark

" Show EOL type and last modified timestamp, right after the filename
set statusline=%<%F%h%m%r\ [%{&ff}]\ (%{strftime(\"%H:%M\ %d/%m/%Y\",getftime(expand(\"%:p\")))})%=%l,%c%V\ %P

" Here's the vimclojure stuff. You'll need to adjust the NailgunClient
" setting if you're on windows or have other problems.
"let vimclojure#FuzzyIndent=1
let vimclojure#HighlightBuiltins=1
let vimclojure#HighlightContrib=1
let vimclojure#DynamicHighlighting=1
let vimclojure#ParenRainbow=1
"let vimclojure#ParenRainbowColors = { '1': 'guifg=green' }
let vimclojure#WantNailgun = 0
let vimclojure#NailgunClient = $HOME . "/.vim/lib/vimclojure-nailgun-client/ng"
"let vimclojure#NailgunServer = "192.168.178.21"
"let vimclojure#NailgunServer = "192.168.178.20"
"let vimclojure#NailgunPort = "2113"

" Shortcuts ------------------------------------------------------------------

" Press twice the <Leader> to exit insert mode without a manual <ESC> or <C-C>
imap <Leader><Leader> <ESC>l

" Character coding for empty characters
set listchars=tab:>-,eol:$,precedes:>,trail:_
" Set symbols for tabs like textmate

" Toggle hidden (empty) chars
nmap <Leader>l :set list!<CR>
"set list


" Toggle line wrapping
nmap <Leader>r :set wrap!<CR>

" Save file
nmap <Leader>w :w<CR>

" Toggle line numbers
"nmap <Leader>n :set nu!<CR>

" ============================================================================
" try the shortcuts below:
" ============================================================================

" Quit the current window
nmap <Leader>q :q<CR>

" Delete the current buffer
nmap <Leader>d :bd<CR>

" Show a list of all open buffers
nmap <Leader>b :ls<CR>

" Jump from window to window
nmap <Leader><Tab> <C-W>w

" Jump from tab to tab
nmap <Leader><S-Tab> :tabn<CR>

" Quickly 'maximize' a split
nmap <Leader>mw <C-W>\|
nmap <Leader>mh <C-W>_
nmap <Leader>me <C-W>=
nmap <Leader>mm <Leader>mw<Leader>mh

" Quickly 'maximize' the entire UI - 999 is a bit lot :(
nmap <Leader>Mw :set columns=250<CR>
nmap <Leader>Mh :set lines=69<CR>
nmap <Leader>MM <Leader>Mw<Leader>Mh

" Switch windows with ctrl + hjkl
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Split up/down/left/right
nmap <Leader>sk :sp \| Explore<CR>
nmap <Leader>sj :rightbelow sp \| Explore<CR>
nmap <Leader>sh :vsp \| Explore<CR>
nmap <Leader>sl :rightbelow vsp \| Explore<CR>

"nmap <Leader>er :tabnew ~/.vimrc<CR>
nmap <Leader>ev :e ~/.vimrc<CR>
nmap <Leader>ec :e ~/dev/cheatsheet/cheatsheet.html<CR>
nmap <Leader>sr :source ~/.vimrc<CR>


" this is the default mouse setting
"if has('mouse')
"    set mouse=a
"endif


" Syntax ---------------------------------------------------------------------
syntax on
filetype plugin indent on
set showmatch
setlocal foldmethod=syntax
"set foldlevel=1
set foldlevelstart=99          "remove folds

"set linespace=4                "add some line space for easy reading


" Editor Behavior -------------------------------------------------------------
set nowrap
set number               " Shows line number
set showmode             " show the current mode
set ruler

" Searching
set hlsearch             " highlight matches
set incsearch            " incremental searching
set ignorecase           " searches are case insensitive...
set smartcase            " ... unless they contain at least one capital letter

" Insure Clean Pasting w/autoindented code
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>

" Backup files are for the weak
"set nobackup
"set nowritebackup

" Wait-time for a key code or mapped keysequence to complete, default 1000
"set timeoutlen=500

" Horizontal split
nmap <leader>- :sp<CR>
" Vertical split
"nmap <leader>\ :vsp<CR>

nmap <leader>gst :Gstatus<CR>
nmap <leader>gdf :Gdiff<CR>
nmap <leader>gci :Gcommit<CR>

try                     " these keys are not mapped under windows by default
    unmap <S-Up>
    unmap <S-Down>
catch
endtry

nmap <S-Up> [e
nmap <S-Down> ]e

vmap <S-Left> <gv
vmap <S-Right> >gv
vmap <S-Up> [egv
vmap <S-Down> ]egv

nmap <F12> :silent !google-chrome ~/dev/cheatsheet/cheatsheet.html<CR>

" Remap 0 to first non-blank character
"map 0 ^

" Rename current file
function! RenameFile()
	let old_name = expand("%")
	let new_name = input('New file name: ', expand('%'))
	if new_name != '' && new_name != old_name
		exec ':saveas ' . new_name
		exec ':silent !rm ' . old_name
		redraw!
	endif
endfunction
map <leader>n :call RenameFile()<cr>

" Start python on F5
autocmd FileType python map <F5> :w<CR>:!python "%"<CR>

" use <leader>Ctrl+L to toggle the line number counting method
function! g:ToggleNuMode()
  if &nu == 1
     set rnu
  else
     set nu
  endif
endfunction
nnoremap <silent><leader><C-L> :call g:ToggleNuMode()<cr>

" Quickly switch buffers (prev/next)
" it doesn't work somehow TODO try to see why using :map or :nmap
"try
    "unmap <C-P>
    "unmap <C-N>
"catch
"endtry
"nmap <C-P> :bp<CR>
"nmap <C-N> :bp<CR>

autocmd VimEnter * NERDTree

nmap <leader>a :call Email("Andreas")<CR>
nmap <leader>j :call Email("JÃ¼rgen")<CR>
nmap <leader>y :call Email("Yvonne")<CR>
nmap <leader>t :call Email("Thomas")<CR>

" Buffer switching can be also made by <C-^>
nmap <leader>1 :1b<CR>
nmap <leader>2 :2b<CR>
nmap <leader>3 :3b<CR>
nmap <leader>4 :4b<CR>
nmap <leader>5 :5b<CR>
nmap <leader>6 :6b<CR>
nmap <leader>7 :7b<CR>
nmap <leader>8 :8b<CR>
nmap <leader>9 :9b<CR>
