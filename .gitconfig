# see http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
[alias]
	au = add --update
  ss = status --short
  st = status
  ci = commit
  br = branch
  co = checkout
  df = diff --word-diff
  bi = bisect
  # -s, --no-messages  suppress error messages
  who = shortlog --no-messages --
  undo = reset --hard
  lg-20     = log         -20                        --color               --pretty=format:'%Cred%h%Creset%C(white) %ad%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset' --date=short
  lg-all-20 = log --graph -20                        --color         --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'
  lg-30     = log         -30                        --color               --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'
  lg-all-30 = log --graph -30                        --color         --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'
  # lg-20   = log --graph -20 --color --oneline --graph --pickaxe-all --decorate --stat -G 'master' # see https://zwischenzugs.com/2018/03/26/git-log-the-good-parts/
  lg        = log                                    --color               --pretty=format:'%Cred%h%Creset%C(white) %ad%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset' --date=short
  lg-all    = log --graph --full-history             --color         --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset'
  alg       = log --graph --abbrev-commit            --color               --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset' --
  lg1       = log --graph --abbrev-commit --decorate --date=relative --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
  lg2       = log --graph --abbrev-commit --decorate                 --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'

  # Read, modify and delete symbolic refs
  cb = symbolic-ref HEAD --short
  # show branches
  sb = !ls .git/refs/remotes/*/$(git cb) | cut -d/ -f4,5 | xargs git show-branch $(git cb)

  # text-mode interface for Git
  tig = !tig

  # files modified in last commit
  dl = "!git log --patch -1"

  # show files modified in last commit - another
  # dlc = diff --cached HEAD^

  # find-file; --ignore-case -i
  ff = "!git ls-files | grep --ignore-case"

  sl = stash list
  ss = stash save
  sp = stash pop

  # ! is needed to pass argument correctly to -S
  fsc = "!git log --color --patch -S " # find-string in the content of commits
  fsm = "!git log --grep "             # find-string in commit messages

[user]
  name = Rostislav Svoboda
  email = Rostislav.Svoboda@gmail.com
  # The secret key is not in git's configs but in the GnuPG's "keyring".
  # The signingkey value only instructs gpg which secret key to select.
  # https://stackoverflow.com/a/48067999
  # gpg --list-public-keys $personName
  signingkey = A2FED89D9A10000E5BF63B37612D36368877DC81
  # gpg --keyid-format=long
  # signingkey = 612D36368877DC81
  # gpg --keyid-format=short
  # signingkey = 8877DC81

[color]
  ui = auto
[push]
  default = simple
[github]
  user = Bost
[diff]
  indentHeuristic = true
[rebase]
  autostash = true
[core]
  editor = vim
[sendemail]
  smtpserver = smtp.googlemail.com
  smtpencryption = tls
  smtpserverport = 587
  smtpuser = Rostislav.Svoboda@gmail.com
[commit]
  gpgsign = true
